// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protocol/engine_builder.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "protocol/engine_builder.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace mozc {

namespace {

const ::google::protobuf::Descriptor* EngineReloadRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  EngineReloadRequest_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* EngineReloadRequest_EngineType_descriptor_ = NULL;
const ::google::protobuf::Descriptor* EngineReloadResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  EngineReloadResponse_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* EngineReloadResponse_Status_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_protocol_2fengine_5fbuilder_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_protocol_2fengine_5fbuilder_2eproto() {
  protobuf_AddDesc_protocol_2fengine_5fbuilder_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "protocol/engine_builder.proto");
  GOOGLE_CHECK(file != NULL);
  EngineReloadRequest_descriptor_ = file->message_type(0);
  static const int EngineReloadRequest_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EngineReloadRequest, engine_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EngineReloadRequest, file_path_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EngineReloadRequest, install_location_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EngineReloadRequest, magic_number_),
  };
  EngineReloadRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      EngineReloadRequest_descriptor_,
      EngineReloadRequest::default_instance_,
      EngineReloadRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EngineReloadRequest, _has_bits_[0]),
      -1,
      -1,
      sizeof(EngineReloadRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EngineReloadRequest, _internal_metadata_),
      -1);
  EngineReloadRequest_EngineType_descriptor_ = EngineReloadRequest_descriptor_->enum_type(0);
  EngineReloadResponse_descriptor_ = file->message_type(1);
  static const int EngineReloadResponse_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EngineReloadResponse, status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EngineReloadResponse, request_),
  };
  EngineReloadResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      EngineReloadResponse_descriptor_,
      EngineReloadResponse::default_instance_,
      EngineReloadResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EngineReloadResponse, _has_bits_[0]),
      -1,
      -1,
      sizeof(EngineReloadResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EngineReloadResponse, _internal_metadata_),
      -1);
  EngineReloadResponse_Status_descriptor_ = EngineReloadResponse_descriptor_->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_protocol_2fengine_5fbuilder_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      EngineReloadRequest_descriptor_, &EngineReloadRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      EngineReloadResponse_descriptor_, &EngineReloadResponse::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_protocol_2fengine_5fbuilder_2eproto() {
  delete EngineReloadRequest::default_instance_;
  delete EngineReloadRequest_reflection_;
  delete EngineReloadResponse::default_instance_;
  delete EngineReloadResponse_reflection_;
}

void protobuf_AddDesc_protocol_2fengine_5fbuilder_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_protocol_2fengine_5fbuilder_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\035protocol/engine_builder.proto\022\004mozc\"\272\001"
    "\n\023EngineReloadRequest\0229\n\013engine_type\030\001 \002"
    "(\0162$.mozc.EngineReloadRequest.EngineType"
    "\022\021\n\tfile_path\030\002 \002(\t\022\030\n\020install_location\030"
    "\003 \001(\t\022\024\n\014magic_number\030\004 \001(\t\"%\n\nEngineTyp"
    "e\022\013\n\007DESKTOP\020\000\022\n\n\006MOBILE\020\001\"\275\002\n\024EngineRel"
    "oadResponse\0221\n\006status\030\001 \002(\0162!.mozc.Engin"
    "eReloadResponse.Status\022*\n\007request\030\002 \001(\0132"
    "\031.mozc.EngineReloadRequest\"\305\001\n\006Status\022\014\n"
    "\010ACCEPTED\020\000\022\020\n\014RELOAD_READY\020\001\022\014\n\010RELOADE"
    "D\020\002\022\023\n\017ALREADY_RUNNING\020\003\022\033\n\027ENGINE_VERSI"
    "ON_MISMATCH\020\004\022\020\n\014DATA_MISSING\020\005\022\017\n\013DATA_"
    "BROKEN\020\006\022\020\n\014MMAP_FAILURE\020\007\022\023\n\017INSTALL_FA"
    "ILURE\020\010\022\021\n\rUNKNOWN_ERROR\020\tBD\n.org.mozc.a"
    "ndroid.inputmethod.japanese.protobufB\022Pr"
    "otoEngineBuilder", 616);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "protocol/engine_builder.proto", &protobuf_RegisterTypes);
  EngineReloadRequest::default_instance_ = new EngineReloadRequest();
  EngineReloadResponse::default_instance_ = new EngineReloadResponse();
  EngineReloadRequest::default_instance_->InitAsDefaultInstance();
  EngineReloadResponse::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_protocol_2fengine_5fbuilder_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_protocol_2fengine_5fbuilder_2eproto {
  StaticDescriptorInitializer_protocol_2fengine_5fbuilder_2eproto() {
    protobuf_AddDesc_protocol_2fengine_5fbuilder_2eproto();
  }
} static_descriptor_initializer_protocol_2fengine_5fbuilder_2eproto_;

// ===================================================================

const ::google::protobuf::EnumDescriptor* EngineReloadRequest_EngineType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EngineReloadRequest_EngineType_descriptor_;
}
bool EngineReloadRequest_EngineType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const EngineReloadRequest_EngineType EngineReloadRequest::DESKTOP;
const EngineReloadRequest_EngineType EngineReloadRequest::MOBILE;
const EngineReloadRequest_EngineType EngineReloadRequest::EngineType_MIN;
const EngineReloadRequest_EngineType EngineReloadRequest::EngineType_MAX;
const int EngineReloadRequest::EngineType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EngineReloadRequest::kEngineTypeFieldNumber;
const int EngineReloadRequest::kFilePathFieldNumber;
const int EngineReloadRequest::kInstallLocationFieldNumber;
const int EngineReloadRequest::kMagicNumberFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EngineReloadRequest::EngineReloadRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mozc.EngineReloadRequest)
}

void EngineReloadRequest::InitAsDefaultInstance() {
}

EngineReloadRequest::EngineReloadRequest(const EngineReloadRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:mozc.EngineReloadRequest)
}

void EngineReloadRequest::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  engine_type_ = 0;
  file_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  install_location_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  magic_number_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

EngineReloadRequest::~EngineReloadRequest() {
  // @@protoc_insertion_point(destructor:mozc.EngineReloadRequest)
  SharedDtor();
}

void EngineReloadRequest::SharedDtor() {
  file_path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  install_location_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  magic_number_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void EngineReloadRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EngineReloadRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EngineReloadRequest_descriptor_;
}

const EngineReloadRequest& EngineReloadRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_protocol_2fengine_5fbuilder_2eproto();
  return *default_instance_;
}

EngineReloadRequest* EngineReloadRequest::default_instance_ = NULL;

EngineReloadRequest* EngineReloadRequest::New(::google::protobuf::Arena* arena) const {
  EngineReloadRequest* n = new EngineReloadRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EngineReloadRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mozc.EngineReloadRequest)
  if (_has_bits_[0 / 32] & 15u) {
    engine_type_ = 0;
    if (has_file_path()) {
      file_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_install_location()) {
      install_location_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_magic_number()) {
      magic_number_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool EngineReloadRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mozc.EngineReloadRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .mozc.EngineReloadRequest.EngineType engine_type = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::mozc::EngineReloadRequest_EngineType_IsValid(value)) {
            set_engine_type(static_cast< ::mozc::EngineReloadRequest_EngineType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_file_path;
        break;
      }

      // required string file_path = 2;
      case 2: {
        if (tag == 18) {
         parse_file_path:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_file_path()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->file_path().data(), this->file_path().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "mozc.EngineReloadRequest.file_path");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_install_location;
        break;
      }

      // optional string install_location = 3;
      case 3: {
        if (tag == 26) {
         parse_install_location:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_install_location()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->install_location().data(), this->install_location().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "mozc.EngineReloadRequest.install_location");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_magic_number;
        break;
      }

      // optional string magic_number = 4;
      case 4: {
        if (tag == 34) {
         parse_magic_number:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_magic_number()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->magic_number().data(), this->magic_number().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "mozc.EngineReloadRequest.magic_number");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mozc.EngineReloadRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mozc.EngineReloadRequest)
  return false;
#undef DO_
}

void EngineReloadRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mozc.EngineReloadRequest)
  // required .mozc.EngineReloadRequest.EngineType engine_type = 1;
  if (has_engine_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->engine_type(), output);
  }

  // required string file_path = 2;
  if (has_file_path()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->file_path().data(), this->file_path().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "mozc.EngineReloadRequest.file_path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->file_path(), output);
  }

  // optional string install_location = 3;
  if (has_install_location()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->install_location().data(), this->install_location().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "mozc.EngineReloadRequest.install_location");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->install_location(), output);
  }

  // optional string magic_number = 4;
  if (has_magic_number()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->magic_number().data(), this->magic_number().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "mozc.EngineReloadRequest.magic_number");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->magic_number(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:mozc.EngineReloadRequest)
}

::google::protobuf::uint8* EngineReloadRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mozc.EngineReloadRequest)
  // required .mozc.EngineReloadRequest.EngineType engine_type = 1;
  if (has_engine_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->engine_type(), target);
  }

  // required string file_path = 2;
  if (has_file_path()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->file_path().data(), this->file_path().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "mozc.EngineReloadRequest.file_path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->file_path(), target);
  }

  // optional string install_location = 3;
  if (has_install_location()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->install_location().data(), this->install_location().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "mozc.EngineReloadRequest.install_location");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->install_location(), target);
  }

  // optional string magic_number = 4;
  if (has_magic_number()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->magic_number().data(), this->magic_number().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "mozc.EngineReloadRequest.magic_number");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->magic_number(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mozc.EngineReloadRequest)
  return target;
}

int EngineReloadRequest::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:mozc.EngineReloadRequest)
  int total_size = 0;

  if (has_engine_type()) {
    // required .mozc.EngineReloadRequest.EngineType engine_type = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->engine_type());
  }

  if (has_file_path()) {
    // required string file_path = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->file_path());
  }

  return total_size;
}
int EngineReloadRequest::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:mozc.EngineReloadRequest)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required .mozc.EngineReloadRequest.EngineType engine_type = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->engine_type());

    // required string file_path = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->file_path());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[2 / 32] & 12u) {
    // optional string install_location = 3;
    if (has_install_location()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->install_location());
    }

    // optional string magic_number = 4;
    if (has_magic_number()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->magic_number());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EngineReloadRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mozc.EngineReloadRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const EngineReloadRequest* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const EngineReloadRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mozc.EngineReloadRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mozc.EngineReloadRequest)
    MergeFrom(*source);
  }
}

void EngineReloadRequest::MergeFrom(const EngineReloadRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mozc.EngineReloadRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_engine_type()) {
      set_engine_type(from.engine_type());
    }
    if (from.has_file_path()) {
      set_has_file_path();
      file_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_path_);
    }
    if (from.has_install_location()) {
      set_has_install_location();
      install_location_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.install_location_);
    }
    if (from.has_magic_number()) {
      set_has_magic_number();
      magic_number_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.magic_number_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void EngineReloadRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mozc.EngineReloadRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EngineReloadRequest::CopyFrom(const EngineReloadRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mozc.EngineReloadRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EngineReloadRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void EngineReloadRequest::Swap(EngineReloadRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EngineReloadRequest::InternalSwap(EngineReloadRequest* other) {
  std::swap(engine_type_, other->engine_type_);
  file_path_.Swap(&other->file_path_);
  install_location_.Swap(&other->install_location_);
  magic_number_.Swap(&other->magic_number_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EngineReloadRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = EngineReloadRequest_descriptor_;
  metadata.reflection = EngineReloadRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EngineReloadRequest

// required .mozc.EngineReloadRequest.EngineType engine_type = 1;
bool EngineReloadRequest::has_engine_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void EngineReloadRequest::set_has_engine_type() {
  _has_bits_[0] |= 0x00000001u;
}
void EngineReloadRequest::clear_has_engine_type() {
  _has_bits_[0] &= ~0x00000001u;
}
void EngineReloadRequest::clear_engine_type() {
  engine_type_ = 0;
  clear_has_engine_type();
}
 ::mozc::EngineReloadRequest_EngineType EngineReloadRequest::engine_type() const {
  // @@protoc_insertion_point(field_get:mozc.EngineReloadRequest.engine_type)
  return static_cast< ::mozc::EngineReloadRequest_EngineType >(engine_type_);
}
 void EngineReloadRequest::set_engine_type(::mozc::EngineReloadRequest_EngineType value) {
  assert(::mozc::EngineReloadRequest_EngineType_IsValid(value));
  set_has_engine_type();
  engine_type_ = value;
  // @@protoc_insertion_point(field_set:mozc.EngineReloadRequest.engine_type)
}

// required string file_path = 2;
bool EngineReloadRequest::has_file_path() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void EngineReloadRequest::set_has_file_path() {
  _has_bits_[0] |= 0x00000002u;
}
void EngineReloadRequest::clear_has_file_path() {
  _has_bits_[0] &= ~0x00000002u;
}
void EngineReloadRequest::clear_file_path() {
  file_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_file_path();
}
 const ::std::string& EngineReloadRequest::file_path() const {
  // @@protoc_insertion_point(field_get:mozc.EngineReloadRequest.file_path)
  return file_path_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void EngineReloadRequest::set_file_path(const ::std::string& value) {
  set_has_file_path();
  file_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mozc.EngineReloadRequest.file_path)
}
 void EngineReloadRequest::set_file_path(const char* value) {
  set_has_file_path();
  file_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mozc.EngineReloadRequest.file_path)
}
 void EngineReloadRequest::set_file_path(const char* value, size_t size) {
  set_has_file_path();
  file_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mozc.EngineReloadRequest.file_path)
}
 ::std::string* EngineReloadRequest::mutable_file_path() {
  set_has_file_path();
  // @@protoc_insertion_point(field_mutable:mozc.EngineReloadRequest.file_path)
  return file_path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* EngineReloadRequest::release_file_path() {
  // @@protoc_insertion_point(field_release:mozc.EngineReloadRequest.file_path)
  clear_has_file_path();
  return file_path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void EngineReloadRequest::set_allocated_file_path(::std::string* file_path) {
  if (file_path != NULL) {
    set_has_file_path();
  } else {
    clear_has_file_path();
  }
  file_path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), file_path);
  // @@protoc_insertion_point(field_set_allocated:mozc.EngineReloadRequest.file_path)
}

// optional string install_location = 3;
bool EngineReloadRequest::has_install_location() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void EngineReloadRequest::set_has_install_location() {
  _has_bits_[0] |= 0x00000004u;
}
void EngineReloadRequest::clear_has_install_location() {
  _has_bits_[0] &= ~0x00000004u;
}
void EngineReloadRequest::clear_install_location() {
  install_location_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_install_location();
}
 const ::std::string& EngineReloadRequest::install_location() const {
  // @@protoc_insertion_point(field_get:mozc.EngineReloadRequest.install_location)
  return install_location_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void EngineReloadRequest::set_install_location(const ::std::string& value) {
  set_has_install_location();
  install_location_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mozc.EngineReloadRequest.install_location)
}
 void EngineReloadRequest::set_install_location(const char* value) {
  set_has_install_location();
  install_location_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mozc.EngineReloadRequest.install_location)
}
 void EngineReloadRequest::set_install_location(const char* value, size_t size) {
  set_has_install_location();
  install_location_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mozc.EngineReloadRequest.install_location)
}
 ::std::string* EngineReloadRequest::mutable_install_location() {
  set_has_install_location();
  // @@protoc_insertion_point(field_mutable:mozc.EngineReloadRequest.install_location)
  return install_location_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* EngineReloadRequest::release_install_location() {
  // @@protoc_insertion_point(field_release:mozc.EngineReloadRequest.install_location)
  clear_has_install_location();
  return install_location_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void EngineReloadRequest::set_allocated_install_location(::std::string* install_location) {
  if (install_location != NULL) {
    set_has_install_location();
  } else {
    clear_has_install_location();
  }
  install_location_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), install_location);
  // @@protoc_insertion_point(field_set_allocated:mozc.EngineReloadRequest.install_location)
}

// optional string magic_number = 4;
bool EngineReloadRequest::has_magic_number() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void EngineReloadRequest::set_has_magic_number() {
  _has_bits_[0] |= 0x00000008u;
}
void EngineReloadRequest::clear_has_magic_number() {
  _has_bits_[0] &= ~0x00000008u;
}
void EngineReloadRequest::clear_magic_number() {
  magic_number_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_magic_number();
}
 const ::std::string& EngineReloadRequest::magic_number() const {
  // @@protoc_insertion_point(field_get:mozc.EngineReloadRequest.magic_number)
  return magic_number_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void EngineReloadRequest::set_magic_number(const ::std::string& value) {
  set_has_magic_number();
  magic_number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mozc.EngineReloadRequest.magic_number)
}
 void EngineReloadRequest::set_magic_number(const char* value) {
  set_has_magic_number();
  magic_number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mozc.EngineReloadRequest.magic_number)
}
 void EngineReloadRequest::set_magic_number(const char* value, size_t size) {
  set_has_magic_number();
  magic_number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mozc.EngineReloadRequest.magic_number)
}
 ::std::string* EngineReloadRequest::mutable_magic_number() {
  set_has_magic_number();
  // @@protoc_insertion_point(field_mutable:mozc.EngineReloadRequest.magic_number)
  return magic_number_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* EngineReloadRequest::release_magic_number() {
  // @@protoc_insertion_point(field_release:mozc.EngineReloadRequest.magic_number)
  clear_has_magic_number();
  return magic_number_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void EngineReloadRequest::set_allocated_magic_number(::std::string* magic_number) {
  if (magic_number != NULL) {
    set_has_magic_number();
  } else {
    clear_has_magic_number();
  }
  magic_number_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), magic_number);
  // @@protoc_insertion_point(field_set_allocated:mozc.EngineReloadRequest.magic_number)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

const ::google::protobuf::EnumDescriptor* EngineReloadResponse_Status_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EngineReloadResponse_Status_descriptor_;
}
bool EngineReloadResponse_Status_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const EngineReloadResponse_Status EngineReloadResponse::ACCEPTED;
const EngineReloadResponse_Status EngineReloadResponse::RELOAD_READY;
const EngineReloadResponse_Status EngineReloadResponse::RELOADED;
const EngineReloadResponse_Status EngineReloadResponse::ALREADY_RUNNING;
const EngineReloadResponse_Status EngineReloadResponse::ENGINE_VERSION_MISMATCH;
const EngineReloadResponse_Status EngineReloadResponse::DATA_MISSING;
const EngineReloadResponse_Status EngineReloadResponse::DATA_BROKEN;
const EngineReloadResponse_Status EngineReloadResponse::MMAP_FAILURE;
const EngineReloadResponse_Status EngineReloadResponse::INSTALL_FAILURE;
const EngineReloadResponse_Status EngineReloadResponse::UNKNOWN_ERROR;
const EngineReloadResponse_Status EngineReloadResponse::Status_MIN;
const EngineReloadResponse_Status EngineReloadResponse::Status_MAX;
const int EngineReloadResponse::Status_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EngineReloadResponse::kStatusFieldNumber;
const int EngineReloadResponse::kRequestFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EngineReloadResponse::EngineReloadResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mozc.EngineReloadResponse)
}

void EngineReloadResponse::InitAsDefaultInstance() {
  request_ = const_cast< ::mozc::EngineReloadRequest*>(&::mozc::EngineReloadRequest::default_instance());
}

EngineReloadResponse::EngineReloadResponse(const EngineReloadResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:mozc.EngineReloadResponse)
}

void EngineReloadResponse::SharedCtor() {
  _cached_size_ = 0;
  status_ = 0;
  request_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

EngineReloadResponse::~EngineReloadResponse() {
  // @@protoc_insertion_point(destructor:mozc.EngineReloadResponse)
  SharedDtor();
}

void EngineReloadResponse::SharedDtor() {
  if (this != default_instance_) {
    delete request_;
  }
}

void EngineReloadResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EngineReloadResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EngineReloadResponse_descriptor_;
}

const EngineReloadResponse& EngineReloadResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_protocol_2fengine_5fbuilder_2eproto();
  return *default_instance_;
}

EngineReloadResponse* EngineReloadResponse::default_instance_ = NULL;

EngineReloadResponse* EngineReloadResponse::New(::google::protobuf::Arena* arena) const {
  EngineReloadResponse* n = new EngineReloadResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EngineReloadResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mozc.EngineReloadResponse)
  if (_has_bits_[0 / 32] & 3u) {
    status_ = 0;
    if (has_request()) {
      if (request_ != NULL) request_->::mozc::EngineReloadRequest::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool EngineReloadResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mozc.EngineReloadResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .mozc.EngineReloadResponse.Status status = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::mozc::EngineReloadResponse_Status_IsValid(value)) {
            set_status(static_cast< ::mozc::EngineReloadResponse_Status >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_request;
        break;
      }

      // optional .mozc.EngineReloadRequest request = 2;
      case 2: {
        if (tag == 18) {
         parse_request:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_request()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mozc.EngineReloadResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mozc.EngineReloadResponse)
  return false;
#undef DO_
}

void EngineReloadResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mozc.EngineReloadResponse)
  // required .mozc.EngineReloadResponse.Status status = 1;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->status(), output);
  }

  // optional .mozc.EngineReloadRequest request = 2;
  if (has_request()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->request_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:mozc.EngineReloadResponse)
}

::google::protobuf::uint8* EngineReloadResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mozc.EngineReloadResponse)
  // required .mozc.EngineReloadResponse.Status status = 1;
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->status(), target);
  }

  // optional .mozc.EngineReloadRequest request = 2;
  if (has_request()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->request_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mozc.EngineReloadResponse)
  return target;
}

int EngineReloadResponse::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:mozc.EngineReloadResponse)
  int total_size = 0;

  // required .mozc.EngineReloadResponse.Status status = 1;
  if (has_status()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
  }
  // optional .mozc.EngineReloadRequest request = 2;
  if (has_request()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->request_);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EngineReloadResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mozc.EngineReloadResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const EngineReloadResponse* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const EngineReloadResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mozc.EngineReloadResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mozc.EngineReloadResponse)
    MergeFrom(*source);
  }
}

void EngineReloadResponse::MergeFrom(const EngineReloadResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mozc.EngineReloadResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_status()) {
      set_status(from.status());
    }
    if (from.has_request()) {
      mutable_request()->::mozc::EngineReloadRequest::MergeFrom(from.request());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void EngineReloadResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mozc.EngineReloadResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EngineReloadResponse::CopyFrom(const EngineReloadResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mozc.EngineReloadResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EngineReloadResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_request()) {
    if (!this->request_->IsInitialized()) return false;
  }
  return true;
}

void EngineReloadResponse::Swap(EngineReloadResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EngineReloadResponse::InternalSwap(EngineReloadResponse* other) {
  std::swap(status_, other->status_);
  std::swap(request_, other->request_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EngineReloadResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = EngineReloadResponse_descriptor_;
  metadata.reflection = EngineReloadResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EngineReloadResponse

// required .mozc.EngineReloadResponse.Status status = 1;
bool EngineReloadResponse::has_status() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void EngineReloadResponse::set_has_status() {
  _has_bits_[0] |= 0x00000001u;
}
void EngineReloadResponse::clear_has_status() {
  _has_bits_[0] &= ~0x00000001u;
}
void EngineReloadResponse::clear_status() {
  status_ = 0;
  clear_has_status();
}
 ::mozc::EngineReloadResponse_Status EngineReloadResponse::status() const {
  // @@protoc_insertion_point(field_get:mozc.EngineReloadResponse.status)
  return static_cast< ::mozc::EngineReloadResponse_Status >(status_);
}
 void EngineReloadResponse::set_status(::mozc::EngineReloadResponse_Status value) {
  assert(::mozc::EngineReloadResponse_Status_IsValid(value));
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:mozc.EngineReloadResponse.status)
}

// optional .mozc.EngineReloadRequest request = 2;
bool EngineReloadResponse::has_request() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void EngineReloadResponse::set_has_request() {
  _has_bits_[0] |= 0x00000002u;
}
void EngineReloadResponse::clear_has_request() {
  _has_bits_[0] &= ~0x00000002u;
}
void EngineReloadResponse::clear_request() {
  if (request_ != NULL) request_->::mozc::EngineReloadRequest::Clear();
  clear_has_request();
}
const ::mozc::EngineReloadRequest& EngineReloadResponse::request() const {
  // @@protoc_insertion_point(field_get:mozc.EngineReloadResponse.request)
  return request_ != NULL ? *request_ : *default_instance_->request_;
}
::mozc::EngineReloadRequest* EngineReloadResponse::mutable_request() {
  set_has_request();
  if (request_ == NULL) {
    request_ = new ::mozc::EngineReloadRequest;
  }
  // @@protoc_insertion_point(field_mutable:mozc.EngineReloadResponse.request)
  return request_;
}
::mozc::EngineReloadRequest* EngineReloadResponse::release_request() {
  // @@protoc_insertion_point(field_release:mozc.EngineReloadResponse.request)
  clear_has_request();
  ::mozc::EngineReloadRequest* temp = request_;
  request_ = NULL;
  return temp;
}
void EngineReloadResponse::set_allocated_request(::mozc::EngineReloadRequest* request) {
  delete request_;
  request_ = request;
  if (request) {
    set_has_request();
  } else {
    clear_has_request();
  }
  // @@protoc_insertion_point(field_set_allocated:mozc.EngineReloadResponse.request)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace mozc

// @@protoc_insertion_point(global_scope)
