// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protocol/engine_builder.proto

#ifndef PROTOBUF_protocol_2fengine_5fbuilder_2eproto__INCLUDED
#define PROTOBUF_protocol_2fengine_5fbuilder_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace mozc {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_protocol_2fengine_5fbuilder_2eproto();
void protobuf_AssignDesc_protocol_2fengine_5fbuilder_2eproto();
void protobuf_ShutdownFile_protocol_2fengine_5fbuilder_2eproto();

class EngineReloadRequest;
class EngineReloadResponse;

enum EngineReloadRequest_EngineType {
  EngineReloadRequest_EngineType_DESKTOP = 0,
  EngineReloadRequest_EngineType_MOBILE = 1
};
bool EngineReloadRequest_EngineType_IsValid(int value);
const EngineReloadRequest_EngineType EngineReloadRequest_EngineType_EngineType_MIN = EngineReloadRequest_EngineType_DESKTOP;
const EngineReloadRequest_EngineType EngineReloadRequest_EngineType_EngineType_MAX = EngineReloadRequest_EngineType_MOBILE;
const int EngineReloadRequest_EngineType_EngineType_ARRAYSIZE = EngineReloadRequest_EngineType_EngineType_MAX + 1;

const ::google::protobuf::EnumDescriptor* EngineReloadRequest_EngineType_descriptor();
inline const ::std::string& EngineReloadRequest_EngineType_Name(EngineReloadRequest_EngineType value) {
  return ::google::protobuf::internal::NameOfEnum(
    EngineReloadRequest_EngineType_descriptor(), value);
}
inline bool EngineReloadRequest_EngineType_Parse(
    const ::std::string& name, EngineReloadRequest_EngineType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EngineReloadRequest_EngineType>(
    EngineReloadRequest_EngineType_descriptor(), name, value);
}
enum EngineReloadResponse_Status {
  EngineReloadResponse_Status_ACCEPTED = 0,
  EngineReloadResponse_Status_RELOAD_READY = 1,
  EngineReloadResponse_Status_RELOADED = 2,
  EngineReloadResponse_Status_ALREADY_RUNNING = 3,
  EngineReloadResponse_Status_ENGINE_VERSION_MISMATCH = 4,
  EngineReloadResponse_Status_DATA_MISSING = 5,
  EngineReloadResponse_Status_DATA_BROKEN = 6,
  EngineReloadResponse_Status_MMAP_FAILURE = 7,
  EngineReloadResponse_Status_INSTALL_FAILURE = 8,
  EngineReloadResponse_Status_UNKNOWN_ERROR = 9
};
bool EngineReloadResponse_Status_IsValid(int value);
const EngineReloadResponse_Status EngineReloadResponse_Status_Status_MIN = EngineReloadResponse_Status_ACCEPTED;
const EngineReloadResponse_Status EngineReloadResponse_Status_Status_MAX = EngineReloadResponse_Status_UNKNOWN_ERROR;
const int EngineReloadResponse_Status_Status_ARRAYSIZE = EngineReloadResponse_Status_Status_MAX + 1;

const ::google::protobuf::EnumDescriptor* EngineReloadResponse_Status_descriptor();
inline const ::std::string& EngineReloadResponse_Status_Name(EngineReloadResponse_Status value) {
  return ::google::protobuf::internal::NameOfEnum(
    EngineReloadResponse_Status_descriptor(), value);
}
inline bool EngineReloadResponse_Status_Parse(
    const ::std::string& name, EngineReloadResponse_Status* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EngineReloadResponse_Status>(
    EngineReloadResponse_Status_descriptor(), name, value);
}
// ===================================================================

class EngineReloadRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mozc.EngineReloadRequest) */ {
 public:
  EngineReloadRequest();
  virtual ~EngineReloadRequest();

  EngineReloadRequest(const EngineReloadRequest& from);

  inline EngineReloadRequest& operator=(const EngineReloadRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EngineReloadRequest& default_instance();

  void Swap(EngineReloadRequest* other);

  // implements Message ----------------------------------------------

  inline EngineReloadRequest* New() const { return New(NULL); }

  EngineReloadRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EngineReloadRequest& from);
  void MergeFrom(const EngineReloadRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(EngineReloadRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef EngineReloadRequest_EngineType EngineType;
  static const EngineType DESKTOP =
    EngineReloadRequest_EngineType_DESKTOP;
  static const EngineType MOBILE =
    EngineReloadRequest_EngineType_MOBILE;
  static inline bool EngineType_IsValid(int value) {
    return EngineReloadRequest_EngineType_IsValid(value);
  }
  static const EngineType EngineType_MIN =
    EngineReloadRequest_EngineType_EngineType_MIN;
  static const EngineType EngineType_MAX =
    EngineReloadRequest_EngineType_EngineType_MAX;
  static const int EngineType_ARRAYSIZE =
    EngineReloadRequest_EngineType_EngineType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  EngineType_descriptor() {
    return EngineReloadRequest_EngineType_descriptor();
  }
  static inline const ::std::string& EngineType_Name(EngineType value) {
    return EngineReloadRequest_EngineType_Name(value);
  }
  static inline bool EngineType_Parse(const ::std::string& name,
      EngineType* value) {
    return EngineReloadRequest_EngineType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required .mozc.EngineReloadRequest.EngineType engine_type = 1;
  bool has_engine_type() const;
  void clear_engine_type();
  static const int kEngineTypeFieldNumber = 1;
  ::mozc::EngineReloadRequest_EngineType engine_type() const;
  void set_engine_type(::mozc::EngineReloadRequest_EngineType value);

  // required string file_path = 2;
  bool has_file_path() const;
  void clear_file_path();
  static const int kFilePathFieldNumber = 2;
  const ::std::string& file_path() const;
  void set_file_path(const ::std::string& value);
  void set_file_path(const char* value);
  void set_file_path(const char* value, size_t size);
  ::std::string* mutable_file_path();
  ::std::string* release_file_path();
  void set_allocated_file_path(::std::string* file_path);

  // optional string install_location = 3;
  bool has_install_location() const;
  void clear_install_location();
  static const int kInstallLocationFieldNumber = 3;
  const ::std::string& install_location() const;
  void set_install_location(const ::std::string& value);
  void set_install_location(const char* value);
  void set_install_location(const char* value, size_t size);
  ::std::string* mutable_install_location();
  ::std::string* release_install_location();
  void set_allocated_install_location(::std::string* install_location);

  // optional string magic_number = 4;
  bool has_magic_number() const;
  void clear_magic_number();
  static const int kMagicNumberFieldNumber = 4;
  const ::std::string& magic_number() const;
  void set_magic_number(const ::std::string& value);
  void set_magic_number(const char* value);
  void set_magic_number(const char* value, size_t size);
  ::std::string* mutable_magic_number();
  ::std::string* release_magic_number();
  void set_allocated_magic_number(::std::string* magic_number);

  // @@protoc_insertion_point(class_scope:mozc.EngineReloadRequest)
 private:
  inline void set_has_engine_type();
  inline void clear_has_engine_type();
  inline void set_has_file_path();
  inline void clear_has_file_path();
  inline void set_has_install_location();
  inline void clear_has_install_location();
  inline void set_has_magic_number();
  inline void clear_has_magic_number();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr file_path_;
  ::google::protobuf::internal::ArenaStringPtr install_location_;
  ::google::protobuf::internal::ArenaStringPtr magic_number_;
  int engine_type_;
  friend void  protobuf_AddDesc_protocol_2fengine_5fbuilder_2eproto();
  friend void protobuf_AssignDesc_protocol_2fengine_5fbuilder_2eproto();
  friend void protobuf_ShutdownFile_protocol_2fengine_5fbuilder_2eproto();

  void InitAsDefaultInstance();
  static EngineReloadRequest* default_instance_;
};
// -------------------------------------------------------------------

class EngineReloadResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mozc.EngineReloadResponse) */ {
 public:
  EngineReloadResponse();
  virtual ~EngineReloadResponse();

  EngineReloadResponse(const EngineReloadResponse& from);

  inline EngineReloadResponse& operator=(const EngineReloadResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EngineReloadResponse& default_instance();

  void Swap(EngineReloadResponse* other);

  // implements Message ----------------------------------------------

  inline EngineReloadResponse* New() const { return New(NULL); }

  EngineReloadResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EngineReloadResponse& from);
  void MergeFrom(const EngineReloadResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(EngineReloadResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef EngineReloadResponse_Status Status;
  static const Status ACCEPTED =
    EngineReloadResponse_Status_ACCEPTED;
  static const Status RELOAD_READY =
    EngineReloadResponse_Status_RELOAD_READY;
  static const Status RELOADED =
    EngineReloadResponse_Status_RELOADED;
  static const Status ALREADY_RUNNING =
    EngineReloadResponse_Status_ALREADY_RUNNING;
  static const Status ENGINE_VERSION_MISMATCH =
    EngineReloadResponse_Status_ENGINE_VERSION_MISMATCH;
  static const Status DATA_MISSING =
    EngineReloadResponse_Status_DATA_MISSING;
  static const Status DATA_BROKEN =
    EngineReloadResponse_Status_DATA_BROKEN;
  static const Status MMAP_FAILURE =
    EngineReloadResponse_Status_MMAP_FAILURE;
  static const Status INSTALL_FAILURE =
    EngineReloadResponse_Status_INSTALL_FAILURE;
  static const Status UNKNOWN_ERROR =
    EngineReloadResponse_Status_UNKNOWN_ERROR;
  static inline bool Status_IsValid(int value) {
    return EngineReloadResponse_Status_IsValid(value);
  }
  static const Status Status_MIN =
    EngineReloadResponse_Status_Status_MIN;
  static const Status Status_MAX =
    EngineReloadResponse_Status_Status_MAX;
  static const int Status_ARRAYSIZE =
    EngineReloadResponse_Status_Status_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Status_descriptor() {
    return EngineReloadResponse_Status_descriptor();
  }
  static inline const ::std::string& Status_Name(Status value) {
    return EngineReloadResponse_Status_Name(value);
  }
  static inline bool Status_Parse(const ::std::string& name,
      Status* value) {
    return EngineReloadResponse_Status_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required .mozc.EngineReloadResponse.Status status = 1;
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 1;
  ::mozc::EngineReloadResponse_Status status() const;
  void set_status(::mozc::EngineReloadResponse_Status value);

  // optional .mozc.EngineReloadRequest request = 2;
  bool has_request() const;
  void clear_request();
  static const int kRequestFieldNumber = 2;
  const ::mozc::EngineReloadRequest& request() const;
  ::mozc::EngineReloadRequest* mutable_request();
  ::mozc::EngineReloadRequest* release_request();
  void set_allocated_request(::mozc::EngineReloadRequest* request);

  // @@protoc_insertion_point(class_scope:mozc.EngineReloadResponse)
 private:
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_request();
  inline void clear_has_request();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::mozc::EngineReloadRequest* request_;
  int status_;
  friend void  protobuf_AddDesc_protocol_2fengine_5fbuilder_2eproto();
  friend void protobuf_AssignDesc_protocol_2fengine_5fbuilder_2eproto();
  friend void protobuf_ShutdownFile_protocol_2fengine_5fbuilder_2eproto();

  void InitAsDefaultInstance();
  static EngineReloadResponse* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// EngineReloadRequest

// required .mozc.EngineReloadRequest.EngineType engine_type = 1;
inline bool EngineReloadRequest::has_engine_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EngineReloadRequest::set_has_engine_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EngineReloadRequest::clear_has_engine_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EngineReloadRequest::clear_engine_type() {
  engine_type_ = 0;
  clear_has_engine_type();
}
inline ::mozc::EngineReloadRequest_EngineType EngineReloadRequest::engine_type() const {
  // @@protoc_insertion_point(field_get:mozc.EngineReloadRequest.engine_type)
  return static_cast< ::mozc::EngineReloadRequest_EngineType >(engine_type_);
}
inline void EngineReloadRequest::set_engine_type(::mozc::EngineReloadRequest_EngineType value) {
  assert(::mozc::EngineReloadRequest_EngineType_IsValid(value));
  set_has_engine_type();
  engine_type_ = value;
  // @@protoc_insertion_point(field_set:mozc.EngineReloadRequest.engine_type)
}

// required string file_path = 2;
inline bool EngineReloadRequest::has_file_path() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void EngineReloadRequest::set_has_file_path() {
  _has_bits_[0] |= 0x00000002u;
}
inline void EngineReloadRequest::clear_has_file_path() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void EngineReloadRequest::clear_file_path() {
  file_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_file_path();
}
inline const ::std::string& EngineReloadRequest::file_path() const {
  // @@protoc_insertion_point(field_get:mozc.EngineReloadRequest.file_path)
  return file_path_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void EngineReloadRequest::set_file_path(const ::std::string& value) {
  set_has_file_path();
  file_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mozc.EngineReloadRequest.file_path)
}
inline void EngineReloadRequest::set_file_path(const char* value) {
  set_has_file_path();
  file_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mozc.EngineReloadRequest.file_path)
}
inline void EngineReloadRequest::set_file_path(const char* value, size_t size) {
  set_has_file_path();
  file_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mozc.EngineReloadRequest.file_path)
}
inline ::std::string* EngineReloadRequest::mutable_file_path() {
  set_has_file_path();
  // @@protoc_insertion_point(field_mutable:mozc.EngineReloadRequest.file_path)
  return file_path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* EngineReloadRequest::release_file_path() {
  // @@protoc_insertion_point(field_release:mozc.EngineReloadRequest.file_path)
  clear_has_file_path();
  return file_path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void EngineReloadRequest::set_allocated_file_path(::std::string* file_path) {
  if (file_path != NULL) {
    set_has_file_path();
  } else {
    clear_has_file_path();
  }
  file_path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), file_path);
  // @@protoc_insertion_point(field_set_allocated:mozc.EngineReloadRequest.file_path)
}

// optional string install_location = 3;
inline bool EngineReloadRequest::has_install_location() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void EngineReloadRequest::set_has_install_location() {
  _has_bits_[0] |= 0x00000004u;
}
inline void EngineReloadRequest::clear_has_install_location() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void EngineReloadRequest::clear_install_location() {
  install_location_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_install_location();
}
inline const ::std::string& EngineReloadRequest::install_location() const {
  // @@protoc_insertion_point(field_get:mozc.EngineReloadRequest.install_location)
  return install_location_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void EngineReloadRequest::set_install_location(const ::std::string& value) {
  set_has_install_location();
  install_location_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mozc.EngineReloadRequest.install_location)
}
inline void EngineReloadRequest::set_install_location(const char* value) {
  set_has_install_location();
  install_location_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mozc.EngineReloadRequest.install_location)
}
inline void EngineReloadRequest::set_install_location(const char* value, size_t size) {
  set_has_install_location();
  install_location_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mozc.EngineReloadRequest.install_location)
}
inline ::std::string* EngineReloadRequest::mutable_install_location() {
  set_has_install_location();
  // @@protoc_insertion_point(field_mutable:mozc.EngineReloadRequest.install_location)
  return install_location_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* EngineReloadRequest::release_install_location() {
  // @@protoc_insertion_point(field_release:mozc.EngineReloadRequest.install_location)
  clear_has_install_location();
  return install_location_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void EngineReloadRequest::set_allocated_install_location(::std::string* install_location) {
  if (install_location != NULL) {
    set_has_install_location();
  } else {
    clear_has_install_location();
  }
  install_location_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), install_location);
  // @@protoc_insertion_point(field_set_allocated:mozc.EngineReloadRequest.install_location)
}

// optional string magic_number = 4;
inline bool EngineReloadRequest::has_magic_number() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void EngineReloadRequest::set_has_magic_number() {
  _has_bits_[0] |= 0x00000008u;
}
inline void EngineReloadRequest::clear_has_magic_number() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void EngineReloadRequest::clear_magic_number() {
  magic_number_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_magic_number();
}
inline const ::std::string& EngineReloadRequest::magic_number() const {
  // @@protoc_insertion_point(field_get:mozc.EngineReloadRequest.magic_number)
  return magic_number_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void EngineReloadRequest::set_magic_number(const ::std::string& value) {
  set_has_magic_number();
  magic_number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mozc.EngineReloadRequest.magic_number)
}
inline void EngineReloadRequest::set_magic_number(const char* value) {
  set_has_magic_number();
  magic_number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mozc.EngineReloadRequest.magic_number)
}
inline void EngineReloadRequest::set_magic_number(const char* value, size_t size) {
  set_has_magic_number();
  magic_number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mozc.EngineReloadRequest.magic_number)
}
inline ::std::string* EngineReloadRequest::mutable_magic_number() {
  set_has_magic_number();
  // @@protoc_insertion_point(field_mutable:mozc.EngineReloadRequest.magic_number)
  return magic_number_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* EngineReloadRequest::release_magic_number() {
  // @@protoc_insertion_point(field_release:mozc.EngineReloadRequest.magic_number)
  clear_has_magic_number();
  return magic_number_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void EngineReloadRequest::set_allocated_magic_number(::std::string* magic_number) {
  if (magic_number != NULL) {
    set_has_magic_number();
  } else {
    clear_has_magic_number();
  }
  magic_number_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), magic_number);
  // @@protoc_insertion_point(field_set_allocated:mozc.EngineReloadRequest.magic_number)
}

// -------------------------------------------------------------------

// EngineReloadResponse

// required .mozc.EngineReloadResponse.Status status = 1;
inline bool EngineReloadResponse::has_status() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EngineReloadResponse::set_has_status() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EngineReloadResponse::clear_has_status() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EngineReloadResponse::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::mozc::EngineReloadResponse_Status EngineReloadResponse::status() const {
  // @@protoc_insertion_point(field_get:mozc.EngineReloadResponse.status)
  return static_cast< ::mozc::EngineReloadResponse_Status >(status_);
}
inline void EngineReloadResponse::set_status(::mozc::EngineReloadResponse_Status value) {
  assert(::mozc::EngineReloadResponse_Status_IsValid(value));
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:mozc.EngineReloadResponse.status)
}

// optional .mozc.EngineReloadRequest request = 2;
inline bool EngineReloadResponse::has_request() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void EngineReloadResponse::set_has_request() {
  _has_bits_[0] |= 0x00000002u;
}
inline void EngineReloadResponse::clear_has_request() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void EngineReloadResponse::clear_request() {
  if (request_ != NULL) request_->::mozc::EngineReloadRequest::Clear();
  clear_has_request();
}
inline const ::mozc::EngineReloadRequest& EngineReloadResponse::request() const {
  // @@protoc_insertion_point(field_get:mozc.EngineReloadResponse.request)
  return request_ != NULL ? *request_ : *default_instance_->request_;
}
inline ::mozc::EngineReloadRequest* EngineReloadResponse::mutable_request() {
  set_has_request();
  if (request_ == NULL) {
    request_ = new ::mozc::EngineReloadRequest;
  }
  // @@protoc_insertion_point(field_mutable:mozc.EngineReloadResponse.request)
  return request_;
}
inline ::mozc::EngineReloadRequest* EngineReloadResponse::release_request() {
  // @@protoc_insertion_point(field_release:mozc.EngineReloadResponse.request)
  clear_has_request();
  ::mozc::EngineReloadRequest* temp = request_;
  request_ = NULL;
  return temp;
}
inline void EngineReloadResponse::set_allocated_request(::mozc::EngineReloadRequest* request) {
  delete request_;
  request_ = request;
  if (request) {
    set_has_request();
  } else {
    clear_has_request();
  }
  // @@protoc_insertion_point(field_set_allocated:mozc.EngineReloadResponse.request)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace mozc

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::mozc::EngineReloadRequest_EngineType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::mozc::EngineReloadRequest_EngineType>() {
  return ::mozc::EngineReloadRequest_EngineType_descriptor();
}
template <> struct is_proto_enum< ::mozc::EngineReloadResponse_Status> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::mozc::EngineReloadResponse_Status>() {
  return ::mozc::EngineReloadResponse_Status_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_protocol_2fengine_5fbuilder_2eproto__INCLUDED
